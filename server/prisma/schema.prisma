generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

model User {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  email    String    @unique
  password String
  role     Role      @default(USER)
  address  Address[]
  orders   Order[]
}

model Address {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
  fullName   String  @db.VarChar(100)
  street     String  @db.VarChar(150)
  city       String  @db.VarChar(100)
  postalCode String  @db.VarChar(20)
  country    String  @db.VarChar(100)
  phone      String  @db.VarChar(20)
  isDefault  Boolean @default(false)
  orders     Order[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(200)
  description String    @db.Text
  price       Float
  stock       Int
  image       String    @db.VarChar(255)
  imagePublicId String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orderItems  OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  address    Address     @relation(fields: [addressId], references: [id])
  addressId  Int
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  total      Float
  items      OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}
